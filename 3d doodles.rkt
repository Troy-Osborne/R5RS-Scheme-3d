(load "Extruder.scm")

(define (expt_wave w) (lambda (x) (* (abs (w x)) (sign (w x)))))

(define (circle-path f rotres) (map (lambda (a) (let ((angle (* tau (/ a rotres))) (mag (f (* tau (/ a rotres))))) (cons (* mag (cos angle)) (* mag (sin angle))))) (range (+ 1 rotres))))


(define (dynamic-prism func length steps)
  (dynamic-extrude2d
   (path2d (line2d '(0 . 0) `(0 . ,length) steps) #f)
   func))

;hypocycloid chaotic
;(display (dynamic-prism
;         (lambda (step r)
;           (map (lambda (rotstep) (let ((x (/ rotstep 180))) (cons (- (* .3 (cos (* tau x))) (* (+ .5 (* r .3)) (cos (* 46 tau x)))) (- (* .3 (sin (* tau x)) ) (* (+ .5 (* r .3)) (sin (* 46 tau x)) ))))) (range 181)))
;          .1 3
;          ))

;cone drill bit
;(display (dynamic-prism
;         (lambda (step r)
;           (map (lambda (rotstep) (let ((x (/ rotstep 90)) (mag (+ 1 (* .3 (expt (abs (sin (* tau (+ (/ rotstep 90) (* 4 r))))) 40)))))
;                                    (cons (* r mag (cos (* x tau))) (* r mag (sin (* x tau))) ) )) (range 91)))
;          10 80
;          ))

;cone drill bit 2
;(display (dynamic-prism
;         (lambda (step r)
;           (map (lambda (rotstep) (let ((x (/ rotstep 90)) (mag (+ 1 (* .6 (expt (abs (sin (* tau (+ (/ rotstep 90) (* 4 r))))) 90)))))
;                                    (cons (* (expt r 3) mag (cos (* x tau))) (* (expt r 3) mag (sin (* x tau))) ) )) (range 91)))
;          3 80
;          ))

;flower bowl
;(display
;(dynamic-prism
;(lambda (step r)
; (circle-path (lambda (angle) (* (expt (- 1 r) .5) (- 1 (* .4 (sin (+ (* r 3) (* 4 angle)))) (* .2 (expt (sin (+ (* 10 r) (* 16 angle))) 8))))) 320))
;.4 20
;))

;pepper cracker
;(display (surface-of-revolution `((0 . 0) (0 . .1) (.2 . .1) (.2 . .025) (.25 . .025) (.25 . .6) (1 . .6) (1 . .625) (1.05 . .625) (1.05 . .6) (1.25 . .6) (1.25 . .625) (1.3 . .625) (1.3 . .6) (4 . .65) (4 . 0)) 120))

;Mobius Strip


 ; (extrude2d
  ; (path2d (ellipsegen 5 5 4) #f)
;
 ;  '((0 . 0) (0 . 1)) #t #t)

;  (extrude2d-vertices
;   (path2d `((0 . 0) (0 . 1)) #f)
;    '((0 . 0) (1 . 0))
;    #t
;    #t
   ;)

; (display (surface-of-revolution
;           `((0 . 0) (0 . 0.2) (0.1464 . 0.4412) (0.3564 . 0.6866) (0.7413 . 0.9188) (1.5303 . 0.9984) (1.6860000000000002 . 0.8656) (2.0265 . 0.461) (2.2557 . 0.3748) (2.3766 . 0.4146) (2.5578000000000003 . 0.6202) (2.6372999999999998 . 0.8524) (2.6502 . 0.8922) (2.685 . 0.8922) (2.7104999999999997 . 0.8524) (2.7168 . 0.7928) (2.6724 . 0.66) (2.6406 . 0.5406) (2.5674 . 0.4344) (2.5134 . 0.3946) (2.2842 . 0.262) (2.157 . 0.282) (2.052 . 0.3284) (1.9596 . 0.3748) (1.8228 . 0.5008) (1.6512 . 0.6734) (1.5492 . 0.7794) (1.3965 . 0.7794) (0.9099 . 0.786) (0.6489 . 0.6932) (0.42299999999999993 . 0.66) (0.24180000000000001 . 0.4344) (0.1686 . 0.3416) (0.1146 . 0.1294) (0.09240000000000001 . 0.0034) (0.0891 . 0) )
;90))

;bottle
;(display (surface-of-revolution
;`((0.0126 . 0) (0.0222 . 0.1294) (0.025500000000000002 . 0.607) (0.025500000000000002 . 0.859) (0.009600000000000001 . 0.932) (0.0414 . 1.005) (0.1272 . 1.0316) (0.4296 . 1.0382) (0.5091 . 0.985) (0.5694 . 0.9188) (0.6777 . 0.9188) (0.7667999999999999 . 0.9122) (0.8208 . 0.932) (0.8811 . 0.9452) (0.9990000000000001 . 0.9452) (1.0752 . 0.8656) (1.104 . 0.786) (1.1705999999999999 . 0.4544) (1.1739 . 0.189) (1.2153 . 0.1824) (1.2408000000000001 . 0.189) (1.2408000000000001 . 0.2222) (1.2408000000000001 . 0.262) (1.263 . 0.2554) (1.263 . 0.2156) (1.2852000000000001 . 0.2156) (1.2852000000000001 . 0.2488) (1.3425 . 0.2488) (1.3617000000000001 . 0.2354) (1.368 . 0.189) (1.368 . 0.1558) (1.3647 . 0) )
;90 ))


;diamond 1
;(display (dynamic-extrude2d
;          (path2d (ellipsegen .01 .01 7) #t)
;(lambda (step r) (switch-axis`((0.21960000000000002 . 0) (,(+ (* .12 (sin (* r tau))) 1) . ,(+ (* .12 (sin (* r tau))) 0.481)) (1.209 . ,(+ (* .26 (sin (* r tau)))  0.587)) (1.5843 . ,(+ (* .2 (sin (* r tau))) 0.6136)) (1.7529000000000001 . ,(+ (* .05 (sin (* r tau))) 0.3482)) (1.7496 . 0) ) ))
;))

;diamond 2
;(display (dynamic-extrude2d
;          (path2d (ellipsegen .01 .01 8) #t)
;(lambda (step r) (switch-axis 
;`((0.0444 . 0) (0.1845 . ,(+ (* .09 (sin (* r tau))) 0.282)) (0.5028 . ,(+ (* .16 (sin (+ (* r tau) .1)))  0.7794)) (0.9927000000000001 . 1.257) (1.6766999999999999 . 1.6086) (2.1411 . 1.5754) (2.5197 . ,(+ 1.2636 (* (sin (* pi r)) .4))) (2.739 . ,(+ 0.514 (* (sin (* tau r)) .07))) (2.7423 . 0) )
;                             )
;  )
;))

;lamp
;(display (surface-of-revolution
;`((0.122 . 0) (0.12 . 0.4262) (0.284 . 0.4262) (0.2968 . 0.4196) (0.3096 . 0.3964) (0.3268 . 0.3731) (0.3268 . 0.3333) (0.3268 . 0.2736) (0.3308 . 0.0846) (0.3604 . 0.0547) (0.4156 . 0.0415) (0.5092 . 0.0381) (2.5028 . 0.0315) (2.5068 . 0.1277) (2.6552 . 0.2305) (2.0868 . 0.3698) (2.0828 . 0.403) (2.91 . 0.2007) (2.8972 . 0.1841) (2.7064 . 0.2206) (2.6596 . 0.2139) (2.5324 . 0.1244) (2.524 . 0.068) (2.5916 . 0.0713) (2.5916 . 0.0514) (2.5364 . 0.0481) (2.5364 . 0.0448) (2.6088 . 0.0514) (2.6468 . 0.058) (2.6764 . 0.0746) (2.702 . 0.0912) (2.736 . 0.1111) (2.7828 . 0.1244) (2.8336 . 0.1144) (2.8588 . 0.0912) (2.8716 . 0.0547) (2.8716 . 0) )
;128
;))


;(display (surface-of-revolution
;`((0.0732 . 0) (0.09240000000000001 . 0.3616) (0.05399999999999999 . 0.4412) (0.038099999999999995 . 0.534) (0.0414 . 0.6334) (0.0858 . 0.7462) (0.2004 . 0.8258) (0.2037 . 1.0316) (0.25770000000000004 . 1.0912) (0.31170000000000003 . 1.1178) (0.31170000000000003 . 1.2438) (0.366 . 1.383) (0.44220000000000004 . 1.403) (0.43590000000000007 . 1.5622) (0.5058 . 1.6352) (0.5915999999999999 . 1.7014) (0.5949 . 1.8408) (0.6426000000000001 . 1.8938) (0.7221 . 1.9138) (0.8333999999999999 . 1.9004) (0.8175000000000001 . 1.748) (0.8175000000000001 . 1.748) (0.6426000000000001 . 1.781) (0.6267 . 1.5888) (0.474 . 1.5158) (0.48029999999999995 . 1.2836) (0.3468 . 1.2704) (0.3405 . 0.9452) (0.2544 . 0.9586) (0.22590000000000002 . 0.7396) (0.2037 . 0.408) (0.19080000000000003 . 0.1228) (0.19080000000000003 . 0) )
;200))


;table leg fancy
;(display (surface-of-revolution
;          '((0.0033 . 0) (0.0033 . 0.1045) (0.0318 . 0.1111) (0.047700000000000006 . 0.1609) (0.05399999999999999 . 0.1741) (0.0795 . 0.1874) (0.1017 . 0.1874) (0.5028 . 0.2007) (0.5217 . 0.1907) (0.5408999999999999 . 0.1774) (0.5694 . 0.141) (0.63 . 0.1376) (0.6617999999999999 . 0.194) (0.6617999999999999 . 0.2471) (0.6648 . 0.3167) (0.738 . 0.3566) (0.7317 . 0.2504) (0.7698 . 0.2305) (0.8241 . 0.2371) (0.8559 . 0.267) (0.9036000000000001 . 0.2869) (0.9702000000000001 . 0.2902) (1.0689 . 0.2902) (1.0911 . 0.2703) (1.1517 . 0.2272) (1.2248999999999999 . 0.1741) (1.4379 . 0.1509) (1.8261 . 0.1542) (2.3382 . 0.1841) (2.3796 . 0.2272) (2.4051 . 0.267) (2.42 . 0.3234) (2.42 . 0) )
;          32)
;         )

;tabletop
;(display (extrude2d
;          (path2d (ellipsegen .01 .01 4) #t)
;`((0.000 . 0) (1.2822 . 0) (1.2822 . 0.1144) (1.3425 . 0.1144) (1.3551 . 0.1211) (1.3743 . 0.141) (1.3872 . 0.1741) (1.3901999999999999 . 0.2139) (1.4571 . 0.2139) (1.4571 . 0.2272) (1.4634 . 0.2504) (1.4601000000000002 . 0.3367) (0 . 0.3267) )
;#f
;#f
;))

;bottle
(display (surface-of-revolution
`((0.0414 . 0) (0.0414 . 0.0462) (0.0414 . 0.262) (0.028499999999999998 . 0.299) (0.0222 . 0.3298) (0.0222 . 0.3668) (0.0318 . 0.3976) (0.047700000000000006 . 0.4346) (0.0699 . 0.4592) (0.1146 . 0.4838) (0.1272 . 0.4838) (0.1623 . 0.4838) (0.1941 . 0.453) (0.2481 . 0.4714) (0.6999 . 0.4776) (0.7253999999999999 . 0.4654) (0.7413 . 0.4406) (0.7635000000000001 . 0.4098) (0.7761 . 0.379) (0.7857000000000001 . 0.342) (0.7923 . 0.2928) (0.8175000000000001 . 0.2558) (0.8559 . 0.2312) (0.8907 . 0.225) (0.9225 . 0.225) (1.1262 . 0.188) (1.1199000000000001 . 0.2372) (1.1739 . 0.2372) (1.1739 . 0.1818) (1.1421 . 0.1818) (1.1295 . 0.1634) (1.1166 . 0.1386) (0.8208 . 0.188) (0.8049 . 0.1942) (0.7539 . 0.342) (0.7158 . 0.416) (0.2673 . 0.4098) (0.11130000000000001 . 0.4222) (0.0669 . 0.3852) (0.0699 . 0.0648) (0.0699 . 0) (0.0603 . 0) )
64))